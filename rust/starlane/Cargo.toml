[package]
name = "starlane"

description = "Starlane -- A Mesh for extending any enterprise resource with WebAssembly!  Starlane is the Reference implementation of the Cosmic Initiative: http://thecosmicinitiative.io (A WebAssembly Orchestration Framework)"


version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
full=["server"]
default=["server"]
server=["hyperspace", "hyperlane","postgres", "hyperlane-tcp", "cli", "dep:threadpool", "dep:oneshot", "dep:anyhow", "dep:virtual-fs"]
cli=["dep:text_io","dep:clap", "dep:walkdir", "space"]
hyperspace=["dep:futures","dep:dashmap","dep:semver", "space"]
hyperlane=["space"]
hyperlane-tcp =  ["hyperlane","dep:rcgen","dep:rustls","dep:tokio-rustls","dep:tls-api-rustls"]
hyperlane-quic =  ["hyperlane","dep:rcgen","dep:rustls", "dep:quinn"]
postgres=[ "dep:sqlx","dep:serde","dep:tracing","dep:async-recursion" ]
space= ["dep:ariadne", "dep:nom", "dep:nom-supreme", "dep:nom_locate", "dep:regex", "dep:serde_json", "dep:serde_urlencoded", "dep:enum-ordinalize", "dep:convert_case", "dep:validator"]


[dependencies]
lazy_static = {  workspace=true  }
uuid = { workspace=true, features=["v4"] }
chrono = { workspace=true, features=["serde"] }
tokio = { workspace=true, features = ["full"] }
async-trait = {workspace = true}
ctrlc = {workspace = true}
bincode = {workspace = true}
strum =  {workspace = true}
strum_macros = {workspace = true}
wasmer = {workspace = true}
wasmer-compiler-singlepass = {workspace = true}
#acid-store = {git="https://github.com/uberscott/acid-store.git" , version="0.14.2" }

once_cell = { workspace=true }
zip = { workspace=true, optional = true }
dirs ={ workspace=true, optional = true }
ascii ={ workspace=true }
url ={ workspace=true }

# hyper requirements
futures = {workspace=true, default-features = true, optional=true }
dashmap = {workspace=true, optional = true}
semver = { workspace=true, features=['serde'], optional = true }


# postgres deps
sqlx = { workspace = true, features = [ "runtime-tokio-rustls", "postgres", "macros", "any" ], optional = true }
serde = { workspace = true, features=['derive','rc'], optional=true }
tracing = { workspace = true, optional = true}
async-recursion = { workspace = true, optional=true }


rcgen = { workspace = true, optional = true}
rustls = { workspace = true, optional = true}
tokio-rustls =  { workspace = true, optional = true}
tls-api-rustls =  { workspace = true, optional = true}

text_io = { workspace = true, optional = true}
clap =  { workspace = true, optional = true , features=["cargo"]}
walkdir = { workspace = true, optional = true }

ariadne = { workspace = true, optional = true }
nom ={ workspace = true, optional = true }
nom-supreme = { workspace = true, optional = true }
nom_locate = { workspace = true, optional = true }
regex = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
serde_urlencoded = { workspace = true, optional = true }
enum-ordinalize = { workspace = true, optional = true }
convert_case = { workspace = true, optional = true }
validator = { workspace = true, optional = true }


threadpool ={ workspace = true, optional = true }
oneshot = { workspace = true, optional = true }


anyhow = { workspace = true, optional = true }
virtual-fs ={ workspace = true, optional = true }

quinn ={ workspace = true, optional = true }
[lib]
name = "starlane"
path= "src/lib.rs"


[[bin]]
name = "starlane"
doc = false
path = "src/main.rs"